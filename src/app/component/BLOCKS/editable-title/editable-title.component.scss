@use 'sass:map';
@use '@angular/material' as mat;

@mixin css($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);
  // Get the primary color palette from the color-config.
  $primary-palette: map.get($color-config, 'primary');
  $accent-palette: map.get($color-config, 'accent');
  $typography-config: mat.get-typography-config($theme);
  $background: map.get($theme, background);
  $foreground: map.get($theme, foreground);

  #editable-title-block {

    padding: 10px 15px;

    @include mat.typography-level($typography-config, 'headline-6');

    //Don't wrap text
    white-space: nowrap;

    .editModeRow {
      height: 34px;
      display: flex;
      align-items: center;
      justify-content: start;
      gap: 10px;

      .customInputForm {

        margin-top: -5px;

        .customInput {
          @include mat.typography-level($typography-config, 'subtitle-2');
        }

        .mat-mdc-form-field-subscript-wrapper {
          display: none;
        }

        .mat-mdc-form-field-infix {
          padding: 6px 0;
        }

        .mdc-text-field--filled:not(.mdc-text-field--disabled) {
          //background-color: #eff1f8;
          background-color: #f0f1f5;
        }

        .mat-mdc-text-field-wrapper {
          height: 30px;
          width: 100px;
          padding: 0 6px;
        }
      }
    }

    .mini-buttons {
      @include mat.typography-level($typography-config, 'body-2');
      padding: 0 10px;
      margin: 0;
      height: 30px;
      flex-grow: 1;

      &.blue {
        border-color: mat.get-color-from-palette($primary-palette, 500);

        svg > path {
          fill: mat.get-color-from-palette($primary-palette, 500) !important;
        }
      }

      &.red {
        border-color: var(--mat-warning-color);

        svg > path {
          fill: var(--mat-warning-color);
        }
      }
    }
  }
}
